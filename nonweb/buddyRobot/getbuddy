#!/usr/bin/python
import os
import sys
import re
import time
import thread
import socket
from threading import Thread, Timer

class WorkerPool:
	def __init__(self, n=10):
		self.queue = []
		self.lock = thread.allocate_lock() 
		for i in range(n):
			thread.start_new_thread( self.worker, () ) 

	def worker(self):
		while True:
			task = self.getTask()
			if task:
				task.run()
			else:
				time.sleep( 0.003 )

	def addTask(self,task):
		self.lock.acquire()
		self.queue.append ( task )
		self.lock.release()

	def getTask(self):
		self.lock.acquire()
		if len(self.queue) == 0 :
			r = None
		else:
		     	r = self.queue.pop(0)
		self.lock.release()
		return r

class QueryThread:
	def __init__(self, conn, line):
		self.line = line 
		self.conn = conn
	
	def run(self):
		handle = os.popen( '/home/robot/jiwai/nonweb/buddyRobot/getbuddy.php', 'w' )
		handle.write( self.line )	
		handle.close()
		
		try:
			self.conn.close()
		except socket.error :
			pass

def listen( port, poolsize=10, host='' ):
	queryPool = WorkerPool(poolsize)
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.bind( (host, port) )
		s.listen(1)
		while True:
			conn, addr = s.accept()
			data = conn.recv(1024)
			queryPool.addTask( QueryThread(conn, data) )
			conn.close()

	except KeyboardInterrupt:
		s.close()

#'''Main Loop'''
if __name__ == '__main__':
	listen( 55501 )
